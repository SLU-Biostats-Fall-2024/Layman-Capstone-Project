---
title: "Preliminary_Data_Analysis-TimeSeries"
author: "ML"
format: html
editor: visual
---

# Data Analysis: Time Series Test

CAPDAP Final Project 12/18/2024

In this document, I will explore the relationship between time and dissolved oxygen saturdation from the data file "CAPDAP_WC_4Analysis.csv."

Instead of running a statistical analysis with time series, I am going to make a final plot for visual analysis of my data

starting with a clean environment and package installation

```{r}
rm (list = ls())
library(tidyverse)
library(here)
library(ggfortify)
library(multcomp)
library(forecast) #for moving averages
library(gridExtra) #to arrange plots
library(zoo) # for moving averages
```

read in the data

```{r}
WC<- read.csv(here("data", "CAPDAP_WC_4Analysis.csv"))
```

let's alter the data types

```{r}
WC$Site_Type <- as.factor(WC$Site_Type)
WC$Date<-ymd(WC$Date)
WC$Time<-hms(WC$Time)
WC$DateTime <- with(WC, Date + Time) 
```

My null hypothesis is that there is no relationship between Time of Day and Dissolved Oxygen Saturation in my Water Chestnut data or the Hurricane Timeline and Dissolved Oxygen Saturation.

My alternative hypothesis is that overnight, due to less photosynthesis and therefore less oxygen produced, dissolved oxygen values would drop.

## In this project, I'll analyze time as a moving average

A moving average is a method for analyzing data points by creating a series of averages of different subsets of the data. A *simple moving average* averages together data points over a specified number of time periods.

#### Create time series object

First, I'll create a *time series object* using the `ts()` function which comes with base R.

```{r}
WC_O2 <- WC$DO

WC_O2 <- ts(WC_O2, frequency = 24, 
                start = c(2024,7) #indicates that the data begin in Jan 2023
                )
```

#### Calculate the simple moving average

Now let's use the `rollmean()` function from the `zoo` package to caluclate a simple moving average.

```{r}
WC_sma1 <- rollmean(WC_O2, 
                      #first argument is the time series object
                      k = 7, #k specifies the integer width of the rolling window and must be an odd number. Let's start with 29 days
                      fill = NA #fill pads the resulting series with NA values at the start and stop where the moving average cannot be computed
                      )
```

#### Now plot the time series along with its moving average

First, we need to add our moving average to our data frame for plotting. It should also be numeric and not a time-series object.

```{r}
WC$sma1 <- as.numeric(WC_O2)
```

Now we can plot

```{r}
night1 <- data.frame(X=c(WC$DateTime[10],WC$DateTime[18]), Y = 3)
night2 <- data.frame(X=c(WC$DateTime[34],WC$DateTime[42]), Y = 3)
night3 <- data.frame(X=c(WC$DateTime[58],WC$DateTime[66]), Y = 3)
night4 <- data.frame(X=c(WC$DateTime[82],WC$DateTime[90]), Y = 3)
night5 <- data.frame(X=c(WC$DateTime[106],WC$DateTime[113]), Y = 3)
night6 <- data.frame(X=c(WC$DateTime[129],WC$DateTime[137]), Y = 3)
hurricane <- data.frame(X=c(WC$DateTime[12],WC$DateTime[225]), Y = 100)
hypoxia <-   data.frame(X=c(WC$DateTime[149],WC$DateTime[148]), Y=20)



o_sma1 <-ggplot(WC, aes(x =DateTime))+
  geom_line(aes(y = sma1), color = "black", size = 0.2) + #moving average
  # geom_vline(xintercept=WC$DateTime[37],linetype=4)+ #indicates start of hurricane
  # geom_vline(xintercept=WC$DateTime[225],linetype=4)+ #indicates end of hurricane
  geom_hline(yintercept=20,linetype=2)+ #indicates hypoxia
  geom_area(aes(x=X,y=Y),data=hypoxia,alpha=0.2,fill="brown")+
  geom_area(aes(x=X,y=Y),data=hurricane,alpha=0.2,fill="red")+
  geom_vline(xintercept=WC$DateTime[10:18],linetype=3, alpha=0.5, colour = "blue")+
  geom_vline(xintercept=WC$DateTime[34:42],linetype=3, alpha=0.5, colour = "blue")+
  geom_vline(xintercept=WC$DateTime[58:66],linetype=3, alpha=0.5, colour = "blue")+
  geom_vline(xintercept=WC$DateTime[82:90],linetype=3, alpha=0.5, colour = "blue")+
  geom_vline(xintercept=WC$DateTime[106:113],linetype=3, alpha=0.5, colour = "blue")+
  geom_vline(xintercept=WC$DateTime[129:137],linetype=3, alpha=0.5, colour = "blue")+


  geom_area(aes(x=X,y=Y),data=night1,alpha=0.7,fill="blue")+
  geom_area(aes(x=X,y=Y),data=night2,alpha=0.7,fill="blue")+
  geom_area(aes(x=X,y=Y),data=night3,alpha=0.7,fill="blue")+
  geom_area(aes(x=X,y=Y),data=night4,alpha=0.7,fill="blue")+
  geom_area(aes(x=X,y=Y),data=night5,alpha=0.7,fill="blue")+
  geom_area(aes(x=X,y=Y),data=night6,alpha=0.7,fill="blue")+
  labs(title = "Dissolved Oxygen during Hurricane Beryl", x = "Time", y = "Percent DO")+
  theme_bw()+
  geom_label(aes(x = WC$DateTime[115], y = 30, label = "Vertical Bars = Night"), fill = "lightblue")+
  geom_label(aes(x = WC$DateTime[42], y = 95, label = "Active Hurricane Beryl"), fill = "red")+
  geom_label(aes(x = WC$DateTime[26], y = 10, label = "hypoxia occurs <20% DO"), fill = "orange", alpha=0.5)

o_sma1
```

## Results

From this plot, we can see that oxygen levels dropped a night across all 24 hr cycles. There were also drops of dissolved oxygen levels into hypoxia (\<20% saturation) during the hurricane and into anoxia (0% saturation) at the end of the hurricane, with a return to values in the 50%-75% range after the hurricane.

Based on these visuals, I would suggest that we accept my alternative hypothesis that dissolved oxygen values would drop significantly overnight and in hurricane conditions.
